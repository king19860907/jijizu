package com.jijizu.core.diary.service;

import java.util.Date;
import java.util.List;
import java.util.Map;

import com.jijizu.core.diary.dto.DiaryInfo;
import com.jijizu.core.diary.dto.SickInfo;
import com.jijizu.core.dto.JsonResult;
import com.jijizu.core.user.dto.UserInfo;

public interface DiaryService {
	
	/**   
	 *******************************************************************************
	 * @function : 删除小本本
	 * @param sessionUserInfo
	 * @param diaryId
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-4-2   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	JsonResult deleteDiary(UserInfo sessionUserInfo,Long diaryId);

	/**   
	 *******************************************************************************
	 * @function : 新建小本本
	 * @param sessionUserInfo
	 * @param para
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-3-29   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	JsonResult addDiary(UserInfo sessionUserInfo,Map<String,Object> para);
	
	/**   
	 *******************************************************************************
	 * @function : 更新小本本
	 * @param sessionUserInfo
	 * @param para
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-4-7   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	JsonResult updateDiary(UserInfo sessionUserInfo,Map<String,Object> para);
	
	/**   
	 *******************************************************************************
	 * @function : 查询孩子的小本本
	 * @param childId
	 * @param diaryType
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-3-29   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	List<DiaryInfo> findChildDiary(Long childId,String diaryType);
	
	/**   
	 *******************************************************************************
	 * @function : 查询平均小本本数据
	 * @param diaryType
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-4-1   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	List<Map<String,String>> findAvgDiaryData(String diaryType,List<DiaryInfo> childDiaryData,Long rownum);
	
	/**   
	 *******************************************************************************
	 * @function : 查询孩子小本本数据
	 * @param childId
	 * @param diaryType
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-4-1   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	List<DiaryInfo> findChildDiaryData(Long childId,String diaryType,Long rownum);
	
	/**   
	 *******************************************************************************
	 * @function : 根据id查询孩子的小本本
	 * @param diaryId
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-4-2   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	DiaryInfo getDiaryById(Long diaryId);
	
	/**   
	 *******************************************************************************
	 * @function : 根据id查询孩子的小本本
	 * @param diaryId
	 * @param isLoadStatus	是否加载微博数据
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-4-2   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	DiaryInfo getDiaryById(Long diaryId,boolean isLoadStatus);
	
	/**   
	 *******************************************************************************
	 * @function : 根据id查询孩子的小本本
	 * @param diaryId
	 * @param isLoadStatus	是否加载微博数据
	 * @param isLoadChild	是否加载孩子数据
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-4-2   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	DiaryInfo getDiaryById(Long diaryId,boolean isLoadStatus,boolean isLoadChild);
	
	/**   
	 *******************************************************************************
	 * @function : 根据id查询孩子的小本本
	 * @param diaryId
	 * @param isLoadStatus		是否加载微博数据
	 * @param isLoadChild		是否加载孩子数据
	 * @param isLoadSymptom		是否加载症状
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-4-11   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	DiaryInfo getDiaryById(Long diaryId,boolean isLoadStatus,boolean isLoadChild,boolean isLoadSymptom);
	
	/**   
	 *******************************************************************************
	 * @function : 根据id查询孩子的小本本
	 * @param diaryId
	 * @param isLoadStatus		是否加载微博数据
	 * @param isLoadChild		是否加载孩子数据
	 * @param isLoadSymptom		是否加载症状
	 * @param isLoadSick		是否加载确诊疾病
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-4-11   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	DiaryInfo getDiaryById(Long diaryId,boolean isLoadStatus,boolean isLoadChild,boolean isLoadSymptom,boolean isLoadSick);
	
	/**   
	 *******************************************************************************
	 * @function : 根据月份查询小本本数据
	 * @param userId
	 * @param startDate
	 * @param endDate
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-4-2   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	public Map<String,List<DiaryInfo>> findDiaryByMonth(Long userId,Date startDate,Date endDate);
	
	/**   
	 *******************************************************************************
	 * @function : 查询奶粉品牌
	 * @param milkName
	 * @param rownum
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-4-5   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	List<String> findMilkNames(String milkName,Long rownum);
	
	/**   
	 *******************************************************************************
	 * @function : 获取第一次的平均值
	 * @param firstTimeType
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-4-7   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	Long getFirstDayAvg(String firstTimeType);
	
	/**   
	 *******************************************************************************
	 * @function : 根据类型获取疾病列表
	 * @param sickType
	 * @param rownum
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-4-9   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	List<SickInfo> findSickInfoByType(String sickName,String sickType,Long rownum);
	
	/**   
	 *******************************************************************************
	 * @function : 查询相同症状的用户
	 * @param diaryId
	 * @param userId
	 * @return
	 *******************************************************************************
	 * @creator ：majun   
	 * @date ：2013-4-11   
	 *******************************************************************************
	 * @revisor ：   
	 * @date ：   
	 * @memo ：   
	 *******************************************************************************
	 */
	List<UserInfo> findSameSickUser(Long diaryId,Long userId,Long rownum);
	
}
